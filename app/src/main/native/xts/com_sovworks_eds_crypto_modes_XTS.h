/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class com_sovworks_eds_crypto_modes_XTS */

#ifndef _Included_com_sovworks_eds_crypto_modes_XTS
#define _Included_com_sovworks_eds_crypto_modes_XTS
#ifdef __cplusplus
extern "C" {
#endif
#undef com_sovworks_eds_crypto_modes_XTS_KEY_SIZE
#define com_sovworks_eds_crypto_modes_XTS_KEY_SIZE 64L
#undef com_sovworks_eds_crypto_modes_XTS_SECTOR_SIZE
#define com_sovworks_eds_crypto_modes_XTS_SECTOR_SIZE 512L
/*
 * Class:     com_sovworks_eds_crypto_modes_XTS
 * Method:    initContext
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_com_sovworks_eds_crypto_modes_XTS_initContext
  (JNIEnv *, jobject);

/*
 * Class:     com_sovworks_eds_crypto_modes_XTS
 * Method:    closeContext
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_com_sovworks_eds_crypto_modes_XTS_closeContext
  (JNIEnv *, jobject, jlong);

/*
 * Class:     com_sovworks_eds_crypto_modes_XTS
 * Method:    attachNativeCipher
 * Signature: (JJJ)V
 */
JNIEXPORT void JNICALL Java_com_sovworks_eds_crypto_modes_XTS_attachNativeCipher
  (JNIEnv *, jobject, jlong, jlong, jlong);

/*
 * Class:     com_sovworks_eds_crypto_modes_XTS
 * Method:    encrypt
 * Signature: ([BIIJJ)I
 */
JNIEXPORT jint JNICALL Java_com_sovworks_eds_crypto_modes_XTS_encrypt
  (JNIEnv *,jobject, jbyteArray, jint, jint, jlong, jlong);

/*
 * Class:     com_sovworks_eds_crypto_modes_XTS
 * Method:    decrypt
 * Signature: ([BIIJJ)I
 */
JNIEXPORT jint JNICALL Java_com_sovworks_eds_crypto_modes_XTS_decrypt
  (JNIEnv *, jobject, jbyteArray, jint, jint, jlong, jlong);

#ifdef __cplusplus
}
#endif
#endif
